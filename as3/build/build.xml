<?xml version="1.0" encoding="UTF-8"?>
<project name="extension-ant-build">
	<property file="build.properties"/>
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<property name="Flex.ADT" value="${FLEX_HOME}/lib/adt.jar"/>

	<!-- Folder Properties -->
	<dirname property="Extension.BUILD_ROOT" file="${ant.file.extension-ant-build}"/>
	<property name="Extension.MODULE_ROOT" value="${Extension.BUILD_ROOT}/.."/>

	<!-- Project properties -->
	<property name="Extension.MODULE_SRC_ROOT" value="${Extension.MODULE_ROOT}/src"/>
	<property name="Extension.LIBS_ROOT" value="${Extension.MODULE_ROOT}/libs"/>
	<property name="Extension.BIN_ROOT" location="${Extension.MODULE_ROOT}/bin"/>

	<!-- Certificate Properties -->
	<property name="Extension.AIR_CERTIFICATE_ROOT" location="${Extension.MODULE_ROOT}/cert"/>

	<!-- Native Extension -->
	<property name="Extension.EXTENSION_TMP_ROOT" value="${Extension.MODULE_ROOT}/tmp"/>

	<available file="${Extension.BIN_ROOT}" type="dir" property="Extension.bin_root.present"/>
	<available file="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.ane" type="file" property="Extension.bin.present"/>
	<available file="${Extension.AIR_CERTIFICATE_ROOT}/${Extension.AIR_CERTIFICATE_FILE}" type="file" property="Extension.cert.present"/>
	<available file="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc" type="file" property="Extension.swc.present"/>

	<target name="Clean">
		<delete includeemptydirs="true">
			<fileset dir="${Extension.BIN_ROOT}"/>
		</delete>
	</target>

	<target name="Create BIN Folder" unless="Extension.bin_root.present">
		<mkdir dir="${Extension.BIN_ROOT}"/>
	</target>

	<target name="Build Extension SWC" depends="Create BIN Folder" unless="Extension.swc.present">
		<compc output="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc">
			<load-config filename="${FLEX_HOME}/frameworks/air-config.xml" />
			<include-sources file="${Extension.MODULE_SRC_ROOT}/"/>
			<include-libraries file="${Extension.LIBS_ROOT}/"/>
		</compc>
	</target>

	<target name="Generate Certificate" unless="Extension.cert.present">
		<mkdir dir="${Extension.AIR_CERTIFICATE_ROOT}"/>
		<java jar="${Flex.ADT}" fork="true">
			<arg value="-certificate"/>
			<arg value="-cn"/>
			<arg value="${Extension.AIR_CERTIFICATE_NAME}"/>
			<arg value="-ou"/>
			<arg value="${Extension.AIR_ORG_UNIT}"/>
			<arg value="-o"/>
			<arg value="${Extension.AIR_ORG_NAME}"/>
			<arg value="-c"/>
			<arg value="${Extension.AIR_COUNTRY}"/>
			<arg value="${Extension.AIR_KEY_TYPE}"/>
			<arg value="${Extension.AIR_CERTIFICATE_ROOT}/${Extension.AIR_CERTIFICATE_FILE}"/>
			<arg value="${Extension.AIR_CERTIFICATE_PASSWORD}"/>
		</java>
	</target>

	<target name="Build Native Extension (OpenNI)" depends="Build Extension SWC, Generate Certificate">
		<unzip src="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc" dest="${Extension.EXTENSION_TMP_ROOT}"/>
		
		<!-- copy the mac framework to the tmp folder -->
		<copy todir="${Extension.EXTENSION_TMP_ROOT}/${Extension.NATIVE_LIBRARY_OSX_OPENNI}">
			<fileset dir="${Extension.NATIVE_LIBRARY_BIN_FOLDER}/${Extension.NATIVE_LIBRARY_OSX_OPENNI}" />
		</copy>
		
		<!-- copy the windows dll to the tmp folder -->
		<copy todir="${Extension.EXTENSION_TMP_ROOT}">
			<fileset file="${Extension.NATIVE_LIBRARY_BIN_FOLDER}/${Extension.NATIVE_LIBRARY_WINDOWS_OPENNI}" />
		</copy>
		
		<!-- copy the extension.xml to the tmp folder -->
		<copy todir="${Extension.EXTENSION_TMP_ROOT}">
			<fileset file="${Extension.BUILD_ROOT}/extension.xml" />
		</copy>
		
		<!-- replace NATIVE_LIBRARY_WINDOWS & NATIVE_LIBRARY_OSX in the extension.xml -->
		<replace file="${Extension.EXTENSION_TMP_ROOT}/extension.xml" token="NATIVE_LIBRARY_WINDOWS" value="${Extension.NATIVE_LIBRARY_WINDOWS_OPENNI}" />
		<replace file="${Extension.EXTENSION_TMP_ROOT}/extension.xml" token="NATIVE_LIBRARY_OSX" value="${Extension.NATIVE_LIBRARY_OSX_OPENNI}" />
		
		<java jar="${Flex.ADT}" fork="true" dir="${Extension.EXTENSION_TMP_ROOT}" failonerror="true">
			<arg value="-package"/>
			<arg value="-storetype"/>
			<arg value="pkcs12"/>
			<arg value="-keystore"/>
			<arg value="${Extension.AIR_CERTIFICATE_ROOT}/${Extension.AIR_CERTIFICATE_FILE}"/>
			<arg value="-storepass"/>
			<arg value="${Extension.AIR_CERTIFICATE_PASSWORD}"/>
			<arg value="-tsa"/>
			<arg value="none"/>
			<arg value="-target"/>
			<arg value="ane"/>
			<arg value="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}-openni.ane"/>
			<arg value="extension.xml"/>
			<arg value="-swc"/>
			<arg value="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc"/>
			<arg value="-platform"/>
			<arg value="Windows-x86"/>
			<arg value="library.swf"/>
			<arg line="'${Extension.NATIVE_LIBRARY_WINDOWS_OPENNI}'"/>
			<arg value="-platform"/>
			<arg value="MacOS-x86"/>
			<arg value="library.swf"/>
			<arg line="'${Extension.NATIVE_LIBRARY_OSX_OPENNI}'"/>
		</java>
		<delete dir="${Extension.EXTENSION_TMP_ROOT}"/>
	</target>
	
	<target name="Build Native Extension (MSSDK)" depends="Build Extension SWC, Generate Certificate">
			<unzip src="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc" dest="${Extension.EXTENSION_TMP_ROOT}"/>

			<!-- copy the mac framework to the tmp folder -->
			<copy todir="${Extension.EXTENSION_TMP_ROOT}/${Extension.NATIVE_LIBRARY_OSX_OPENNI}">
				<fileset dir="${Extension.NATIVE_LIBRARY_BIN_FOLDER}/${Extension.NATIVE_LIBRARY_OSX_OPENNI}" />
			</copy>
			
			<!-- copy the windows dll to the tmp folder -->
			<copy todir="${Extension.EXTENSION_TMP_ROOT}">
				<fileset file="${Extension.NATIVE_LIBRARY_BIN_FOLDER}/${Extension.NATIVE_LIBRARY_WINDOWS_MSSDK}" />
			</copy>
			
			<!-- copy the extension.xml to the tmp folder -->
			<copy todir="${Extension.EXTENSION_TMP_ROOT}">
				<fileset file="${Extension.BUILD_ROOT}/extension.xml" />
			</copy>
		
			<!-- replace NATIVE_LIBRARY_WINDOWS & NATIVE_LIBRARY_OSX in the extension.xml -->
			<replace file="${Extension.EXTENSION_TMP_ROOT}/extension.xml" token="NATIVE_LIBRARY_WINDOWS" value="${Extension.NATIVE_LIBRARY_WINDOWS_MSSDK}" />
			<replace file="${Extension.EXTENSION_TMP_ROOT}/extension.xml" token="NATIVE_LIBRARY_OSX" value="${Extension.NATIVE_LIBRARY_OSX_OPENNI}" />
			
			<java jar="${Flex.ADT}" fork="true" dir="${Extension.EXTENSION_TMP_ROOT}" failonerror="true">
				<arg value="-package"/>
				<arg value="-storetype"/>
				<arg value="pkcs12"/>
				<arg value="-keystore"/>
				<arg value="${Extension.AIR_CERTIFICATE_ROOT}/${Extension.AIR_CERTIFICATE_FILE}"/>
				<arg value="-storepass"/>
				<arg value="${Extension.AIR_CERTIFICATE_PASSWORD}"/>
				<arg value="-tsa"/>
				<arg value="none"/>
				<arg value="-target"/>
				<arg value="ane"/>
				<arg value="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}-mssdk.ane"/>
				<arg value="extension.xml"/>
				<arg value="-swc"/>
				<arg value="${Extension.BIN_ROOT}/${Extension.EXTENSION_NAME}.swc"/>
				<arg value="-platform"/>
				<arg value="Windows-x86"/>
				<arg value="library.swf"/>
				<arg line="'${Extension.NATIVE_LIBRARY_WINDOWS_MSSDK}'"/>
				<arg value="-platform"/>
				<arg value="MacOS-x86"/>
				<arg value="library.swf"/>
				<arg line="'${Extension.NATIVE_LIBRARY_OSX_OPENNI}'"/>
			</java>
			<delete dir="${Extension.EXTENSION_TMP_ROOT}"/>
		</target>
</project>